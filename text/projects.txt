PROJECT: CS509: Flight Search System DESCRIPTION: In the Course CS 509 Design of Software System, I joined a team to build a flight searching and reservation system. My job in this team is to build all back end APIs for building possible flight plans based on the straight flights data provided from a remote database. The job of the back end is to retrieve data from server by XML and then parse and store them by data structures designed by myself, like Airport, Flight, Airplane. Caching and managing data are also my job. 
One important part of my job is to search customer wanted flight plan results based on all the available data provided by professor.The core algorithm is: 1. Sort all the possible airports by the direction of user's trip. For example, if customer wants to fly from Boston to L.A then we assume the main direction is on the longitude. I think it is an example of “Topological sort”. 2. Pick out the depart airport and destination airport and we only iterate airports between them to avoid redundant flight plans. Another filter operation is to check if one airport is a possible layover airport by some assumptions like the distance, the flight angle etc. All these filters are designed for decreasing the chance to waste time to search flights from server retrieving useless information. 3. Build flight plans recursively in a way like DFS. 
Converting local time from the GMT time in the server is another difficult part. During the time of searching results, the system keeps in GMT timezone. The conversion only happens in the querying step and showing final results. A point must be mentioned is we need to query two days from remote database because local time usually has timezone offsets and the time in the database is GMT time. 
To render the searching results. I builded the main interface for front end to use. Moreover, I wrote some codes to parse instances of data back to XML for communication. 
To finish the project, I had to do some front end jobs as well. The auto-complete and updating airport lists in the first page, the pagination in the second page, the loading function, results sorting are what I did in the front end by using JavaScript JQuery and HTML 5. 
My another contribution is the results showing idea. The results are separately retrieved from server. For example, direct flight plan is retrieved most quickly and will be shown first. Then the one-stop plans will be retrieved and shown. At last, the two-stop plans will get most slowly and shown at last. This flow is implemented by AJax, which I think can give user a better experience, because the database is remote which means the results have to be fetched with a high latency. 
You can try our project demo before our professor shuts down his database server(already shut down). All the information like flights are only used for study. Please don't trust it and use it for other purposes.  
 
PROJECT: Android Application Development DESCRIPTION: I had an experience with Android Application Development from the winter 2014. After that, I started to develop a social network application summer 2015. It includes functionalities like camera, map, server communication, etc. All the activities involving above functions are designed by my self. The source codes is open on my Github. Some utilities like data cache, animation factory, server contact factory, and some data structures are written by myself. An example is a data structure called NotiArrayList<E> which will notify each size change by add listener on it. Some library codes or other's open source codes are also adopted like a great router builder on Google Map Android V2 and ImageLoader for Async loading pic for an ImageView. The back end API part, I adopted Ruby on Rails to develop. It is like a remote database saving messages, managing data and querying for front end. The codes are also open for communicating on my GitHub.

PROJECT: Snake Game DESCRIPTION: Snake Game is a cute Java game. It is a classic computer game. At first, I use playsnake.java to implement the logic function of the game including Snake moving, Turning direction, Body increase, Random setting food and Detection of Game over. I use Javax.swing to build the Graphic User Interface (GUI) of this game. All the listeners of input and GUI are put in SnakeGame.java. The runnable Java program and source code are open for downloading. 

PROJECT: Personal homepage 
DESCRIPTION: Recently I updated this personal homepage. Some JavaScript codes are added to insert paragraphs dynamically, which makes I can update more easily. I plan to develop a new Post function for this site. However, I only have the authentication to upload htmls or other files. I can't access to put my own server application on this site, which restricts this site only to be statically.